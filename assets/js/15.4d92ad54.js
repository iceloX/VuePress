(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{472:function(t,e,a){"use strict";a.r(e);var v=a(2),_=Object(v.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"java程序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java程序"}},[t._v("#")]),t._v(" Java程序")]),t._v(" "),a("p",[t._v("1、用"),a("strong",[t._v("文本编辑器")]),t._v("编写一段Java代码：完成输出“Hello Java“的功能")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://note-icelo.oss-cn-shanghai.aliyuncs.com/java/base/logic/1/5.png",alt:"img"}})]),t._v(" "),a("p",[t._v("2、修改文件的扩展名为Hello.java文件，在cmd中使用cd命令转换到所在的文件夹分别运行javac Hello.java和java Hello.java如下图（因字符编码问题，所报错误无关！）")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://note-icelo.oss-cn-shanghai.aliyuncs.com/java/base/logic/1/6.png",alt:"img"}})]),t._v(" "),a("h2",{attrs:{id:"基本结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本结构"}},[t._v("#")]),t._v(" 基本结构")]),t._v(" "),a("p",[t._v("因为Java是面向对象的语言，一个程序的基本单位就是"),a("code",[t._v("class")]),t._v("，"),a("code",[t._v("class")]),t._v("是关键字，这里定义的"),a("code",[t._v("class")]),t._v("名字就是"),a("code",[t._v("Hello")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Hello")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 类名是Hello")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// class定义结束")]),t._v("\n")])])]),a("p",[t._v("类名要求：")]),t._v(" "),a("ul",[a("li",[t._v("类名必须以英文字母开头，后接字母，数字和下划线的组合")]),t._v(" "),a("li",[t._v("习惯以大写字母开头")])]),t._v(" "),a("p",[t._v("要注意遵守命名习惯，好的类命名：")]),t._v(" "),a("ul",[a("li",[t._v("Hello")]),t._v(" "),a("li",[t._v("NoteBook")]),t._v(" "),a("li",[t._v("VRPlayer")])]),t._v(" "),a("p",[t._v("不好的类命名：")]),t._v(" "),a("ul",[a("li",[t._v("hello")]),t._v(" "),a("li",[t._v("Good123")]),t._v(" "),a("li",[t._v("Note_Book")]),t._v(" "),a("li",[t._v("_World")])]),t._v(" "),a("p",[t._v("注意到"),a("code",[t._v("public")]),t._v("是访问修饰符，表示该"),a("code",[t._v("class")]),t._v("是公开的。")]),t._v(" "),a("p",[t._v("在方法内部，语句才是真正的执行代码。Java的每一行语句必须以分号结束：")]),t._v(" "),a("h2",{attrs:{id:"基本语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本语法"}},[t._v("#")]),t._v(" 基本语法")]),t._v(" "),a("p",[t._v("在编写Java的程序时，应该注意以下几点：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("**大小写敏感：**Java是一种大小写敏感的语言，Hello与hello则表示不同的变量")])]),t._v(" "),a("li",[a("p",[t._v("**类名：**对于所有类来说，类名的首字母应该大写。如果类名是由几个单词组成的，那么每个单词的首字母应该大写，例如：MyFirstJavaClass.")])]),t._v(" "),a("li",[a("p",[t._v("**方法名：**所有的方法应该以小写字母开头，如果方法中由几个单词组成，则后面的单词应该首字母大写。")])]),t._v(" "),a("li",[a("p",[t._v("**源文件：**源文件名字必须要和类名一致，在保存文件的时候，应该使用类名作为文件名来保存。文件名的后缀应该为.java！若文件名和类名不一致时会导致编译报错！")])]),t._v(" "),a("li",[a("p",[t._v("**主方法入口："),a("strong",[t._v("java程序的主方法入口由")]),t._v("Public static void main(String [] args)**方法开始执行。")]),t._v(" "),a("h2",{attrs:{id:"标识符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#标识符"}},[t._v("#")]),t._v(" 标识符")]),t._v(" "),a("p",[t._v("Java所有的组成部分都需要名字。类名、变量名以及方法名都被称为标识符。")]),t._v(" "),a("p",[t._v("关于Java标识符，有以下几点需要注意：")]),t._v(" "),a("ul",[a("li",[t._v("所有的标识符都应该以字母（A-Z或者a-z）,美元符（$）、或者下划线（_）开始")]),t._v(" "),a("li",[t._v("首字符之后可以是任何字符的组合")]),t._v(" "),a("li",[t._v("关键字不能用作标识符")]),t._v(" "),a("li",[t._v("标识符是大小写敏感的")]),t._v(" "),a("li",[t._v("合法标识符举例：age、$salary、_value、__1_value")]),t._v(" "),a("li",[t._v("非法标识符举例：123abc、-salary")])])])]),t._v(" "),a("h2",{attrs:{id:"修饰符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修饰符"}},[t._v("#")]),t._v(" 修饰符")]),t._v(" "),a("p",[t._v("像其他语言一样，Java可以使用修饰符来修饰类中方法和属性。主要有两类修饰符：")]),t._v(" "),a("ul",[a("li",[t._v("访问控制修饰符 : default, public , protected, private")]),t._v(" "),a("li",[t._v("非访问控制修饰符 : final, abstract, static，synchronized 和 volatile")])]),t._v(" "),a("p",[t._v("在后面的章节中我们会深入讨论Java修饰符。")]),t._v(" "),a("h2",{attrs:{id:"变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量"}},[t._v("#")]),t._v(" 变量")]),t._v(" "),a("p",[t._v("Java中主要有如下几种类型的变量")]),t._v(" "),a("ul",[a("li",[t._v("局部变量")]),t._v(" "),a("li",[t._v("类变量（静态变量）")]),t._v(" "),a("li",[t._v("成员变量（非静态变量）")])]),t._v(" "),a("h2",{attrs:{id:"关键词"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关键词"}},[t._v("#")]),t._v(" 关键词")]),t._v(" "),a("p",[t._v("下面列出了Java保留字。这些保留字不能用于常量、变量、和任何标识符的名称。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("关键字")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("abstract")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("抽象方法，抽象类的修饰符")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("assert")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("断言条件是否满足")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("boolean")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("布尔数据类型")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("break")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("跳出循环或者label代码段")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("byte")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("8-bit 有符号数据类型")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("case")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("switch语句的一个条件")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("catch")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("和try搭配捕捉异常信息")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("char")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("16-bit Unicode字符数据类型")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("class")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("定义类")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("const")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("未使用")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("continue")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("不执行循环体剩余部分")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("default")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("switch语句中的默认分支")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("do")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("循环语句，循环体至少会执行一次")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("double")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("64-bit双精度浮点数")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("else")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("if条件不成立时执行的分支")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("enum")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("枚举类型")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("extends")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("表示一个类是另一个类的子类")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("final")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("表示一个值在初始化之后就不能再改变了 表示方法不能被重写，或者一个类不能有子类")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("finally")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("为了完成执行的代码而设计的，主要是为了程序的健壮性和完整性，无论有没有异常发生都执行代码。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("float")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("32-bit单精度浮点数")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("for")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("for循环语句")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("goto")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("未使用")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("if")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("条件语句")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("implements")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("表示一个类实现了接口")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("import")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("导入类")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("instanceof")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("测试一个对象是否是某个类的实例")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("int")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("32位整型数")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("interface")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("接口，一种抽象的类型，仅有方法和常量的定义")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("long")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("64位整型数")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("native")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("表示方法用非java代码实现")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("new")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("分配新的类实例")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("package")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("一系列相关类组成一个包")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("private")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("表示私有字段，或者方法等，只能从类内部访问")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("protected")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("表示字段只能通过类或者其子类访问 子类或者在同一个包内的其他类")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("public")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("表示共有属性或者方法")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("return")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("方法返回值")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("short")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("16位数字")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("static")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("表示在类级别定义，所有实例共享的")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("strictfp")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("浮点数比较使用严格的规则")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("super")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("表示基类")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("switch")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("选择语句")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("synchronized")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("表示同一时间只能由一个线程访问的代码块")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("this")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("表示调用当前实例 或者调用另一个构造函数")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("throw")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("抛出异常")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("throws")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("定义方法可能抛出的异常")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("transient")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("修饰不要序列化的字段")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("try")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("表示代码块要做异常处理或者和finally配合表示是否抛出异常都执行finally中的代码")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("void")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("标记方法不返回任何值")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("volatile")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("标记字段可能会被多个线程同时访问，而不做同步")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("while")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("while循环")])])])]),t._v(" "),a("Vssue")],1)}),[],!1,null,null,null);e.default=_.exports}}]);